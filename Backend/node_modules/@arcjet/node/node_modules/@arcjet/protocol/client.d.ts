import type { Transport } from "@connectrpc/connect";
import type { ArcjetContext, ArcjetRequestDetails, ArcjetRule, ArcjetStack } from "@arcjet/node/node_modules/@arcjet/protocol";
import { ArcjetDecision } from "@arcjet/node/node_modules/@arcjet/protocol";
export interface Client {
    decide(context: ArcjetContext, details: Partial<ArcjetRequestDetails>, rules: ArcjetRule[]): Promise<ArcjetDecision>;
    report(context: ArcjetContext, request: Partial<ArcjetRequestDetails>, decision: ArcjetDecision, rules: ArcjetRule[]): void;
}
export type ClientOptions = {
    transport: Transport;
    baseUrl: string;
    timeout: number;
    sdkStack: ArcjetStack;
    sdkVersion: string;
};
export declare function createClient(options: ClientOptions): Client;
